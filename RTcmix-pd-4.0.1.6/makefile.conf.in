###############################################################
# makefile.conf
#
# There should be no need for most people, other than code
# maintainers, to change anything in this file.  To build
# RTcmix, use the configure script instead:
#
#   $ ./configure [--with-alsa] [--with-perl] [--with-python]
#
# See INSTALL for details.  After using configure, you can 
# override what it does by editing site.conf, if you want.
###############################################################

# The name of the RTcmix directory
CMIXDIR = @CMIXDIR@

# This is the default for non-Linux systems.  If you want to use
# the ALSA driver under Linux, either put "AUDIODRIVER = ALSA" in
# site.conf, or invoke configure with the "--with-alsa" option.
AUDIODRIVER = TRUE

# This file is generated by the configure script.
include $(CMIXDIR)/defs.conf

# This file contains site-specific settings.  Anything that's
# uncommented in this file will override the same definition
# made inside defs.conf by the configure script.
include $(CMIXDIR)/site.conf

# OPT is defined first in defs.conf, as equivalent to the CFLAGS
# macro output by the configure script.  By default, this will 
# contain "-g -O2".  We add some warning flags here.  If you want 
# something other than "-g -O2", either define OPT in site.conf,
# or set the CFLAGS environment variable before invoking configure.
# For bash, this would be...
#
#   $ CFLAGS="-g" ./configure [...]
#
OPT += -Wall -Wno-unused

# The path to this file
MAKEFILE_CONF = $(CMIXDIR)/makefile.conf

SOUND_DRIVER = -D$(AUDIODRIVER)

LIBDIR = $(CMIXDIR)/lib
DESTDIR = $(CMIXDIR)/bin
BINDIR = $(DESTDIR)
INCLUDEDIR = $(CMIXDIR)/include

SRCDIR = $(CMIXDIR)/src
AUDIODIR = $(SRCDIR)/audio
CONFDIR = $(SRCDIR)/conf
PARSERDIR = $(SRCDIR)/parser
MINCDIR = $(PARSERDIR)/minc
PERLDIR = $(PARSERDIR)/perl
PYTHONDIR = $(PARSEDIR)/python

# For temporary use in linking MIX instrument in
MIXDIR = insts/base/MIX

MINCLIB = $(MINCDIR)/libminc.a
PYTHONLIB = $(PYTHONDIR)/libcmixpython.a
SNDLIB = $(SRCDIR)/sndlib/sndlib.a
AUDIOLIB = $(AUDIODIR)/librtaudio.a

# Compile and link time flags

ifeq ($(ARCH),LINUX)
  ARCHFLAGS = -DLINUX
  ARCH_RTLDFLAGS = -Wl,-rpath $(LIBDIR)
  CC = gcc 
  CXX = g++ -Wno-deprecated
  LD = ld
  MAKE = make
  INSTALL = cp -f
  RANLIB = touch
  SHELL = /bin/sh
  SHLIB_SUFFIX = so
endif
ifeq ($(ARCH),MACOSX)
  ARCHFLAGS = -DMACOSX -fno-common
  ARCH_RTLDFLAGS = -dylib_file /usr/lib/$(RTLIB):$(LIBRTCMIX)
# BGG mmx
#  CC = cc
#  CXX = c++ -Wno-deprecated
  CC = gcc-4.0
  CXX = c++-4.0 -Wno-deprecated
  LD = ld
  MAKE = make
  INSTALL = cp -f
  RANLIB = ranlib
  SHELL = /bin/sh
  SHLIB_SUFFIX = dylib
endif
ifeq ($(ARCH),SGI)
  ARCHFLAGS = -DSGI
  ARCH_RTLDFLAGS =
  CC = cc -Xcpluscomm
  CXX = CC
  LD = ld
  MAKE = gmake
  INSTALL = cp -f
  RANLIB = touch
  SHELL = /bin/sh
  SHLIB_SUFFIX = so
endif
ifeq ($(ARCH),FREEBSD)
  ARCHFLAGS = -DFREEBSD -DLINUX
  ARCH_RTLDFLAGS =
  CC = gcc
  CXX = g++
  LD = ld
  MAKE = gmake
  INSTALL = cp -f
  RANLIB = touch
  SHELL = /bin/sh
  SHLIB_SUFFIX = so
endif

INCLUDES = -I. -I$(CMIXDIR)/include

# JWM - abort on error

ifeq ($(NPLAY_SUPPORT), TRUE)
CMIX_FLAGS += -DNETAUDIO
endif

# JWM - isolated OSX-only flags
# BGG mm UB
ifeq ($(ARCH),MACOSX)
	UB_CFLAGS = -isysroot /Developer/SDKs/MacOSX10.5.sdk -arch ppc -arch i386
endif
CFLAGS = $(UB_CFLAGS) $(INCLUDES) $(OPT) $(ARCHFLAGS) $(CMIX_FLAGS)
CXXFLAGS = $(UB_CFLAGS) $(INCLUDES) $(OPT) $(ARCHFLAGS) $(CMIX_FLAGS)


# Platform-independent library flags

RTLIB = librtcmix.$(SHLIB_SUFFIX)
LIBRTCMIX = $(LIBDIR)/$(RTLIB)
RTLDFLAGS = -L$(LIBDIR) -lrtcmix -lgen

LIBGEN = libgen.$(SHLIB_SUFFIX)

# Platform-specific library flags Key:
#
# SYS_LDFLAGS:          External libraries for each platform.
# SYSLIBS:              Libraries which DSOs link against.
# SHARED_LDFLAGS:       Linker flags when creating DSOs.
# CMIXOBJS:             Non-lib .o files which standalone binaries need.
# LDFLAGS:              Libraries which standalone binaries link against.
# IMBCMIXOBJS:          Non-lib .o files which imbedded binaries need.
# DYNAMIC_LDFLAGS:      Linker flags when creating dynamic shared libraries.

ifeq ($(ARCH),LINUX)
  ifeq ($(AUDIODRIVER),ALSA)
    SYS_LDFLAGS = -lasound -lpthread -lm -ldl #-lefence
  else
    SYS_LDFLAGS = -lpthread -lm -ldl #-lefence
  endif
  DSO_LDFLAGS = $(OPT) $(SYSLIBS)
  SHARED_LDFLAGS = -shared -Wl,-soname,$@
  DYNAMIC_LDFLAGS = $(SHARED_LDFLAGS)
  DYN = -rdynamic
endif
ifeq ($(ARCH),MACOSX)
  SYS_LDFLAGS = -framework CoreAudio
  DSO_LDFLAGS = $(SYS_LDFLAGS)
  SHARED_LDFLAGS = -bundle -flat_namespace -undefined suppress
  DYNAMIC_LDFLAGS = -flat_namespace -undefined suppress -dynamiclib -install_name $(LIBDIR)/$@
  DYN = 
endif
ifeq ($(ARCH),SGI)
  SYS_LDFLAGS = -lpthread -laudio -lm
  DSO_LDFLAGS = $(SYS_LDFLAGS)
  SHARED_LDFLAGS = -shared -update_registry $(LIBDESTDIR)/so_locations
  DYNAMIC_LDFLAGS = $(SHARED_LDFLAGS)
  DYN = 
endif
ifeq ($(ARCH),FREEBSD)
  SYS_LDFLAGS += -pthread -lm -ll
  DSO_LDFLAGS = -export-dynamic $(SYS_LDFLAGS)
  SHARED_LDFLAGS = -shared -Wl,-soname,$@
  DYNAMIC_LDFLAGS = $(SHARED_LDFLAGS)
  DYN = -rdynamic
endif

LDFLAGS = $(ARCH_RTLDFLAGS) $(RTLDFLAGS)
SYSLIBS = $(ARCH_RTLDFLAGS) -L$(LIBDIR) -lgen $(SYS_LDFLAGS)

# For benefit of inst makefiles that live outside CMIXDIR hierarchy
UGENS_H = $(CMIXDIR)/include/ugens.h

# for rt insts
INSTRUMENT_H = $(CMIXDIR)/include/Instrument.h
PROFILE_O = $(CMIXDIR)/src/rtcmix/profile.o

# for disk-based insts
RTPROFILE_O = $(CMIXDIR)/src/rtcmix/rtprofile.o

CMIX_O = $(LIBDIR)/main.o $(LIBDIR)/RTcmixMain.o
M_O =  $(PARSERDIR)/parse_with_minc.o
IMB_RTCMIX_O =
P_O =  $(PARSERDIR)/parse_with_perl.o
PY_O = $(PARSERDIR)/parse_with_python.o

CMIXOBJS = $(CMIX_O) $(PY_O) $(GENLIB)
IMBCMIXOBJS = $(IMB_RTCMIX_O) $(GENLIB)

# Things to be removed by 'clean'
TRASH = core core.[0-9]+ *~

